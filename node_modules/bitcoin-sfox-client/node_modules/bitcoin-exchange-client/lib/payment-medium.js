'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var assert = require('assert');

var PaymentMedium = function () {
  function PaymentMedium(api, quote) {
    _classCallCheck(this, PaymentMedium);

    assert(this.constructor !== PaymentMedium, 'Abstract Class');
    assert(api, 'API required');
    this._api = api;
    this._quote = quote;
    this._accounts = [];
  }

  _createClass(PaymentMedium, [{
    key: 'accounts',
    get: function get() {
      return this._accounts;
    }
  }, {
    key: 'inMedium',
    get: function get() {
      return this._inMedium;
    }
  }, {
    key: 'outMedium',
    get: function get() {
      return this._outMedium;
    }
  }, {
    key: 'fiatMedium',
    get: function get() {
      return this._fiatMedium;
    }
  }, {
    key: 'inCurrencies',
    get: function get() {
      return this._inCurrencies;
    }
  }, {
    key: 'outCurrencies',
    get: function get() {
      return this._outCurrencies;
    }
  }, {
    key: 'inCurrency',
    get: function get() {
      return this._inCurrency;
    }
  }, {
    key: 'outCurrency',
    get: function get() {
      return this._outCurrency;
    }
  }, {
    key: 'inFixedFee',
    get: function get() {
      return this._inFixedFee || 0;
    }
  }, {
    key: 'outFixedFee',
    get: function get() {
      return this._outFixedFee || 0;
    }
  }, {
    key: 'inPercentageFee',
    get: function get() {
      return this._inPercentageFee || 0;
    }
  }, {
    key: 'outPercentageFee',
    get: function get() {
      return this._outPercentageFee || 0;
    }
  }, {
    key: 'fee',
    get: function get() {
      return this._fee;
    }
  }, {
    key: 'total',
    get: function get() {
      return this._total;
    }
  }]);

  return PaymentMedium;
}();

module.exports = PaymentMedium;